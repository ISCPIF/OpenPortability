version: '3.8'

services:
  app:
      build:
        context: .
        dockerfile: Dockerfile
      env_file:
        - .env.local
      environment:
        - NODE_ENV=development
      restart: always
      networks:
        - app_network
        - supabase_network_goodbyex
      extra_hosts:
        - "host.docker.internal:host-gateway"
      ports:
        - "3000:3000"
      volumes:
        # - ./:/app:delegated
        # - /app/node_modules
        # - /app/.next
        - shared-tmp:/app/tmp
        # - ./public:/app/public

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    volumes:
      - ./worker:/app
      - /app/node_modules
      - shared-tmp:/app/tmp
    env_file:
      - ./worker/.env
    environment:
      - NODE_ENV=development
    networks:
      - app_network
      - supabase_network_goodbyex
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - app

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - app
    networks:
      - app_network
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # watcher:
  #   build:
  #     context: ./watcher
  #     dockerfile: Dockerfile
  #   environment:
  #     - NODE_ENV=production
  #   env_file:
  #     - ./watcher/.env
  #   restart: unless-stopped
  #   networks:
  #     - app_network
  #     - supabase_network_goodbyex
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "-q", "host.docker.internal:54321"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

networks:
  app_network:
    driver: bridge
  supabase_network_goodbyex:
    external: true

volumes:
  shared-tmp:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: "noexec"

